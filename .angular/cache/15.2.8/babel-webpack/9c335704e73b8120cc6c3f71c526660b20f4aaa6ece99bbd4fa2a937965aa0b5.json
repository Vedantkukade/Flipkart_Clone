{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class LogindataService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n  }\n  postLoginData(data) {\n    return this.http.post(\"http://localhost:3000/posts\", data);\n  }\n  getUserData(data) {\n    console.log(data);\n    this.http.get(`http://localhost:3000/posts?email=${data.email}&password=${data.password}`, {\n      observe: 'response'\n    }).subscribe(res => {\n      if (res && res.body && res.body.length) {\n        console.log(\"user logged in\");\n        localStorage.setItem('user', JSON.stringify(res.body[0]));\n        this.addLocalUserToUser();\n        this.router.navigate(['']);\n      } else {\n        alert(\"Email or Password Incorrect!\");\n      }\n    });\n  }\n  addLocalUserToUser() {\n    let localData = localStorage.getItem(\"localUser\");\n    if (localStorage.getItem('user')) {\n      let userCart = localStorage.getItem('user');\n      console.log(userCart);\n      let userDataId = userCart && JSON.parse(userCart).id;\n      setTimeout(() => {\n        console.log(userDataId);\n      }, 2000);\n    }\n    if (localData) {\n      let localDataList = JSON.parse(localData);\n      // localDataList.forEach((product:any,index)=>{\n      //   let cartData:any={\n      //     ...product,\n      //     productId:product.id,\n      //     userDataId\n      //   }\n      //   delete cartData.id;\n      //   setTimeout(() => {\n      //     this.cartService.addToUserCart(cartData).subscribe(res=>{\n      //       if(res){\n      //         console.log(\"local cart data is added to user cart\");\n      //       }\n      //     })\n      //   }, 500);\n      //   if(localDataList.length===index+1){\n      //     localStorage.removeItem('localUser');\n      //   }\n      // })\n    }\n  }\n\n  userloginauth() {\n    if (localStorage.getItem('user')) {\n      this.router.navigate(['']);\n    }\n  }\n}\nLogindataService.ɵfac = function LogindataService_Factory(t) {\n  return new (t || LogindataService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nLogindataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LogindataService,\n  factory: LogindataService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAOA,OAAM,MAAOA,gBAAgB;EAE3BC,YAAoBC,IAAe,EAASC,MAAa;IAArC,SAAI,GAAJD,IAAI;IAAoB,WAAM,GAANC,MAAM;EAAW;EAG7DC,aAAa,CAACC,IAAQ;IACrB,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAM,6BAA6B,EAACD,IAAI,CAAC;EAE/D;EAEAE,WAAW,CAACF,IAAQ;IAClBG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;IAEjB,IAAI,CAACH,IAAI,CAACQ,GAAG,CAAC,qCAAqCL,IAAI,CAACM,KAAK,aAAaN,IAAI,CAACO,QAAQ,EAAE,EAAC;MAACC,OAAO,EAAC;IAAU,CAAC,CAAC,CAACC,SAAS,CAAEC,GAAO,IAAG;MAEnI,IAAGA,GAAG,IAAIA,GAAG,CAACC,IAAI,IAAID,GAAG,CAACC,IAAI,CAACC,MAAM,EAAC;QACpCT,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;QAC7BS,YAAY,CAACC,OAAO,CAAC,MAAM,EAACC,IAAI,CAACC,SAAS,CAACN,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACxD,IAAI,CAACM,kBAAkB,EAAE;QACzB,IAAI,CAACnB,MAAM,CAACoB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;OAE3B,MAAI;QACHC,KAAK,CAAC,8BAA8B,CAAC;;IAEzC,CAAC,CAAC;EACJ;EAEAF,kBAAkB;IAEhB,IAAIG,SAAS,GAACP,YAAY,CAACQ,OAAO,CAAC,WAAW,CAAC;IAE/C,IAAGR,YAAY,CAACQ,OAAO,CAAC,MAAM,CAAC,EAAC;MAC9B,IAAIC,QAAQ,GAACT,YAAY,CAACQ,OAAO,CAAC,MAAM,CAAC;MACzClB,OAAO,CAACC,GAAG,CAACkB,QAAQ,CAAC;MAErB,IAAIC,UAAU,GAAED,QAAQ,IAAIP,IAAI,CAACS,KAAK,CAACF,QAAQ,CAAC,CAACG,EAAE;MAEnDC,UAAU,CAAC,MAAK;QACdvB,OAAO,CAACC,GAAG,CAACmB,UAAU,CAAC;MACzB,CAAC,EAAE,IAAI,CAAC;;IAMV,IAAGH,SAAS,EAAC;MACX,IAAIO,aAAa,GAAOZ,IAAI,CAACS,KAAK,CAACJ,SAAS,CAAC;MAG7C;MACA;MACA;MACA;MACA;MACA;MAEA;MAEA;MAEA;MACA;MACA;MACA;MACA;MAEA;MAIA;MACA;MACA;MAEA;;EAGJ;;EAEAQ,aAAa;IACX,IAAGf,YAAY,CAACQ,OAAO,CAAC,MAAM,CAAC,EAAC;MAC9B,IAAI,CAACvB,MAAM,CAACoB,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;;EAE9B;;AAnFWvB,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAkC,SAAhBlC,gBAAgB;EAAAmC,YAFf;AAAM","names":["LogindataService","constructor","http","router","postLoginData","data","post","getUserData","console","log","get","email","password","observe","subscribe","res","body","length","localStorage","setItem","JSON","stringify","addLocalUserToUser","navigate","alert","localData","getItem","userCart","userDataId","parse","id","setTimeout","localDataList","userloginauth","factory","providedIn"],"sourceRoot":"","sources":["C:\\Vedant\\Senwell\\Angular\\senwell\\Flipkart_Clone\\src\\app\\Modules\\user-auth-module\\Services\\logindata.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { Router } from '@angular/router';\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogindataService {\n\n  constructor(private http:HttpClient,private router:Router) { }\n\n\n  postLoginData(data:any):Observable<any>{\n   return this.http.post<any>(\"http://localhost:3000/posts\",data)\n    \n  }\n\n  getUserData(data:any){\n    console.log(data);\n\n    this.http.get(`http://localhost:3000/posts?email=${data.email}&password=${data.password}`,{observe:'response'}).subscribe((res:any)=>{\n    \n      if(res && res.body && res.body.length){\n        console.log(\"user logged in\");\n        localStorage.setItem('user',JSON.stringify(res.body[0]));\n        this.addLocalUserToUser();\n        this.router.navigate(['']);\n       \n      }else{\n        alert(\"Email or Password Incorrect!\");\n      }\n    })\n  }\n\n  addLocalUserToUser(){\n  \n    let localData=localStorage.getItem(\"localUser\");\n  \n    if(localStorage.getItem('user')){\n      let userCart=localStorage.getItem('user');\n      console.log(userCart);\n      \n      let userDataId= userCart && JSON.parse(userCart).id\n    \n      setTimeout(() => {\n        console.log(userDataId);\n      }, 2000);\n    }\n  \n  \n    \n  \n    if(localData){\n      let localDataList:any[]=JSON.parse(localData);  \n     \n  \n      // localDataList.forEach((product:any,index)=>{\n      //   let cartData:any={\n      //     ...product,\n      //     productId:product.id,\n      //     userDataId\n      //   }\n  \n      //   delete cartData.id;\n  \n      //   setTimeout(() => {\n  \n      //     this.cartService.addToUserCart(cartData).subscribe(res=>{\n      //       if(res){\n      //         console.log(\"local cart data is added to user cart\");\n      //       }\n      //     })\n  \n      //   }, 500);\n  \n       \n  \n      //   if(localDataList.length===index+1){\n      //     localStorage.removeItem('localUser');\n      //   }\n  \n      // })\n  \n    }\n  }\n\n  userloginauth(){\n    if(localStorage.getItem('user')){\n      this.router.navigate([''])\n    }\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}